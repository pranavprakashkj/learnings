{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  //needs a name\n  initialState,\n  // an initial state. or initialState:initialState\n  reducers: {\n    // an object or map of all the reducers needed by the slice\n    increment(state) {\n      state.counter++;\n    },\n    //these are all methods\n    decrement() {},\n    increase() {},\n    toggle() {}\n  }\n});\nconst CounterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.num,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\n_c = CounterReducer;\nconst store = createStore(CounterReducer);\nexport default store;\nvar _c;\n$RefreshReg$(_c, \"CounterReducer\");","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","toggle","CounterReducer","action","type","num","_c","store","$RefreshReg$"],"sources":["/Users/pranavprakashkj/Projects/learning/react/sec19-redux/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: \"counter\", //needs a name\n  initialState, // an initial state. or initialState:initialState\n  reducers: {\n    // an object or map of all the reducers needed by the slice\n    increment(state) {\n      state.counter++;\n    }, //these are all methods\n    decrement() {},\n    increase() {},\n    toggle() {},\n  },\n});\n\nconst CounterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.num,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    };\n  }\n  return state;\n};\n\nconst store = createStore(CounterReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EAAE;EACjBH,YAAY;EAAE;EACdI,QAAQ,EAAE;IACR;IACAC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IAAE;IACHM,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,QAAQA,CAAA,EAAG,CAAC,CAAC;IACbC,MAAMA,CAAA,EAAG,CAAC;EACZ;AACF,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAACJ,KAAK,GAAGN,YAAY,EAAEW,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EACA,IAAIS,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGU,MAAM,CAACE,GAAG;MACnCX,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EACA,IAAIS,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO;MACtBC,WAAW,EAAE,CAACI,KAAK,CAACJ;IACtB,CAAC;EACH;EACA,OAAOI,KAAK;AACd,CAAC;AAACQ,EAAA,GA3BIJ,cAAc;AA6BpB,MAAMK,KAAK,GAAGjB,WAAW,CAACY,cAAc,CAAC;AAEzC,eAAeK,KAAK;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}