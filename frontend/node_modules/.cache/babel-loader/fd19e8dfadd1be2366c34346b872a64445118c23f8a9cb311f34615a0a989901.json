{"ast":null,"code":"var _jsxFileName = \"/Users/pranavprakashkj/Projects/learning/react/sec21Practice/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (events.isError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: events.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: \"error\"\n    };\n  } else {\n    // const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return response;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","$RefreshReg$"],"sources":["/Users/pranavprakashkj/Projects/learning/react/sec21Practice/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const events = useLoaderData();\n  if (events.isError) return <p>{events.message}</p>;\n  return <EventsList events={events} />;\n}\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    return { isError: true, message: \"error\" };\n  } else {\n    // const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return response;\n  }\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGN,aAAa,CAAC,CAAC;EAC9B,IAAIM,MAAM,CAACC,OAAO,EAAE,oBAAOJ,OAAA;IAAAK,QAAA,EAAIF,MAAM,CAACG;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAClD,oBAAOV,OAAA,CAACF,UAAU;IAACK,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACR,EAAA,CAJQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAc,EAAA,GADrBV,UAAU;AAMnB,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAAEX,OAAO,EAAE,IAAI;MAAEE,OAAO,EAAE;IAAQ,CAAC;EAC5C,CAAC,MAAM;IACL;IACA;IACA,OAAOO,QAAQ;EACjB;AACF;AAEA,eAAeZ,UAAU;AAAC,IAAAU,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}