{"ast":null,"code":"var _jsxFileName = \"/Users/pranavprakashkj/Projects/learning/react/sec21Practice/frontend/src/pages/EventsPage.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  console.log(events);\n  if (events.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: events.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events.events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({\n      message: \"error occured bro\"\n    }, {\n      status: 500\n    });\n  } else {\n    // console.log(\"response\", response);\n    // const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return response;\n  }\n}\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","console","log","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["/Users/pranavprakashkj/Projects/learning/react/sec21Practice/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const events = useLoaderData();\n  console.log(events);\n  if (events.isError) {\n    return <p>{events.message}</p>;\n  }\n  return <EventsList events={events.events} />;\n}\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    throw json(\n      { message: \"error occured bro\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    // console.log(\"response\", response);\n    // const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return response;\n  }\n}\n\nexport default EventsPage;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGN,aAAa,CAAC,CAAC;EAC9BO,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,IAAIA,MAAM,CAACG,OAAO,EAAE;IAClB,oBAAON,OAAA;MAAAO,QAAA,EAAIJ,MAAM,CAACK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EACA,oBAAOZ,OAAA,CAACF,UAAU;IAACK,MAAM,EAAEA,MAAM,CAACA;EAAO;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C;AAACV,EAAA,CAPQD,UAAU;EAAA,QACFJ,aAAa;AAAA;AAAAgB,EAAA,GADrBZ,UAAU;AASnB,OAAO,eAAea,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMrB,IAAI,CACR;MAAEY,OAAO,EAAE;IAAoB,CAAC,EAChC;MACEU,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL;IACA;IACA;IACA,OAAOH,QAAQ;EACjB;AACF;AAEA,eAAed,UAAU;AAAC,IAAAY,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}