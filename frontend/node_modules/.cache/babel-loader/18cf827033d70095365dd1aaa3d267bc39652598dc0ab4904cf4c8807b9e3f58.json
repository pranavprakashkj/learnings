{"ast":null,"code":"var _jsxFileName = \"/Users/pranavprakashkj/Projects/learning/react/sec21Practice/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-details\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: event => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: event => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"error occured bro\"\n    }, {\n      status: 500\n    });\n  } else {\n    // console.log(\"response\", response);\n    const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw json({\n      message: \"error occured bro\"\n    }, {\n      status: 500\n    });\n  } else {\n    // console.log(\"response\", response);\n    const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.id;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const id = params.id;\n  console.log(id);\n  const response = await fetch(`http://localhost:8080/events/${id}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    console.log(\"error\");\n    throw json({\n      message: \"could not delete event\"\n    }, {\n      status: 500\n    });\n  }\n  console.log(response);\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","response","fetch","method","request","ok","message","status","resData","loadEvents","loader","params","action","console","log","$RefreshReg$"],"sources":["/Users/pranavprakashkj/Projects/learning/react/sec21Practice/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import {\n  json,\n  useRouteLoaderData,\n  redirect,\n  defer,\n  Await,\n} from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\n\nexport default function EventDetailPage() {\n  const { event, events } = useRouteLoaderData(\"event-details\");\n  return (\n    <>\n      <Await resolve={event}>{(event) => <EventItem event={event} />}</Await>\n      <Await resolve={events}>{(event) => <EventsList events={event} />}</Await>\n    </>\n  );\n}\n\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`, {\n    method: request.method,\n  });\n\n  if (!response.ok) {\n    throw json(\n      { message: \"error occured bro\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    // console.log(\"response\", response);\n    const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return resData.events;\n  }\n}\n\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    throw json(\n      { message: \"error occured bro\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    // console.log(\"response\", response);\n    const resData = await response.json();\n    // return resData.events; //react will automtically make the return value available for the element\n    return resData.events;\n  }\n}\n\nexport async function loader({ request, params }) {\n  const id = params.id;\n\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents(),\n  });\n}\n\nexport async function action({ params, request }) {\n  const id = params.id;\n  console.log(id);\n  const response = await fetch(`http://localhost:8080/events/${id}`, {\n    method: request.method,\n  });\n  if (!response.ok) {\n    console.log(\"error\");\n    throw json({ message: \"could not delete event\" }, { status: 500 });\n  }\n  console.log(response);\n\n  return redirect(\"/events\");\n}\n"],"mappings":";;AAAA,SACEA,IAAI,EACJC,kBAAkB,EAClBC,QAAQ,EACRC,KAAK,EACLC,KAAK,QACA,kBAAkB;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGb,kBAAkB,CAAC,eAAe,CAAC;EAC7D,oBACEO,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACJ,KAAK;MAACY,OAAO,EAAEH,KAAM;MAAAE,QAAA,EAAGF,KAAK,iBAAKL,OAAA,CAACH,SAAS;QAACQ,KAAK,EAAEA;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvEZ,OAAA,CAACJ,KAAK;MAACY,OAAO,EAAEF,MAAO;MAAAC,QAAA,EAAGF,KAAK,iBAAKL,OAAA,CAACF,UAAU;QAACQ,MAAM,EAAED;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC1E,CAAC;AAEP;AAACR,EAAA,CARuBD,eAAe;EAAA,QACXV,kBAAkB;AAAA;AAAAoB,EAAA,GADtBV,eAAe;AAUvC,eAAeW,SAASA,CAACC,EAAE,EAAE;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BF,EAAG,EAAC,EAAE;IACjEG,MAAM,EAAEC,OAAO,CAACD;EAClB,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM5B,IAAI,CACR;MAAE6B,OAAO,EAAE;IAAoB,CAAC,EAChC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL;IACA,MAAMC,OAAO,GAAG,MAAMP,QAAQ,CAACxB,IAAI,CAAC,CAAC;IACrC;IACA,OAAO+B,OAAO,CAACjB,MAAM;EACvB;AACF;AAEA,eAAekB,UAAUA,CAAA,EAAG;EAC1B,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM5B,IAAI,CACR;MAAE6B,OAAO,EAAE;IAAoB,CAAC,EAChC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL;IACA,MAAMC,OAAO,GAAG,MAAMP,QAAQ,CAACxB,IAAI,CAAC,CAAC;IACrC;IACA,OAAO+B,OAAO,CAACjB,MAAM;EACvB;AACF;AAEA,OAAO,eAAemB,MAAMA,CAAC;EAAEN,OAAO;EAAEO;AAAO,CAAC,EAAE;EAChD,MAAMX,EAAE,GAAGW,MAAM,CAACX,EAAE;EAEpB,OAAOpB,KAAK,CAAC;IACXU,KAAK,EAAES,SAAS,CAACC,EAAE,CAAC;IACpBT,MAAM,EAAEkB,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeG,MAAMA,CAAC;EAAED,MAAM;EAAEP;AAAQ,CAAC,EAAE;EAChD,MAAMJ,EAAE,GAAGW,MAAM,CAACX,EAAE;EACpBa,OAAO,CAACC,GAAG,CAACd,EAAE,CAAC;EACf,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BF,EAAG,EAAC,EAAE;IACjEG,MAAM,EAAEC,OAAO,CAACD;EAClB,CAAC,CAAC;EACF,IAAI,CAACF,QAAQ,CAACI,EAAE,EAAE;IAChBQ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAMrC,IAAI,CAAC;MAAE6B,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE;EACAM,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;EAErB,OAAOtB,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAmB,EAAA;AAAAiB,YAAA,CAAAjB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}